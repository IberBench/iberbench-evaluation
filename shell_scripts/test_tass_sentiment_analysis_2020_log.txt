/data/research/sharedData/conda_envs/iborrego-lmeval-newnewtask/lib/python3.10/site-packages/transformers/utils/hub.py:128: FutureWarning: Using `PYTORCH_PRETRAINED_BERT_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
/data/research/sharedData/conda_envs/iborrego-lmeval-newnewtask/lib/python3.10/site-packages/transformers/utils/hub.py:128: FutureWarning: Using `PYTORCH_TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
/data/research/sharedData/conda_envs/iborrego-lmeval-newnewtask/lib/python3.10/site-packages/transformers/utils/hub.py:128: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
2025-02-04:16:46:18,372 INFO     [__main__.py:284] Verbosity set to INFO
2025-02-04:16:46:18,485 INFO     [__init__.py:459] The tag 'kobest' is already registered as a group, this tag will not be registered. This may affect tasks you want to call.
2025-02-04:16:47:04,682 WARNING  [__main__.py:317]  --limit SHOULD ONLY BE USED FOR TESTING.REAL METRICS SHOULD NOT BE COMPUTED USING LIMIT.
2025-02-04:16:47:04,686 INFO     [__main__.py:369] Passed `--trust_remote_code`, setting environment variable `HF_DATASETS_TRUST_REMOTE_CODE=true`
2025-02-04:16:47:04,691 INFO     [__main__.py:381] Selected Tasks: ['tass_sentiment_analysis_2020']
2025-02-04:16:47:04,738 INFO     [evaluator.py:165] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234 | Setting fewshot manual seed to 1234
2025-02-04:16:47:04,738 INFO     [evaluator.py:202] Initializing hf model, with arguments: {'pretrained': 'EleutherAI/pythia-2.8b', 'trust_remote_code': True, 'parallelize': True, 'max_length': 2048}
2025-02-04:16:47:10,347 INFO     [huggingface.py:358] Model parallel was set to True, setting max memory per GPU to {0: 50759598080, 1: 50759598080} and device map to auto
The `GPTNeoXSdpaAttention` class is deprecated in favor of simply modifying the `config._attn_implementation`attribute of the `GPTNeoXAttention` class! It will be removed in v4.48
2025-02-04:16:47:14,263 WARNING  [task.py:816] [Task: tass_uruguay] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:14,263 WARNING  [task.py:816] [Task: tass_uruguay] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/942 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 942/942 [00:00<00:00, 65435.06 examples/s]
Generating test split:   0%|          | 0/1426 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1426/1426 [00:00<00:00, 82212.99 examples/s]
2025-02-04:16:47:19,758 WARNING  [task.py:816] [Task: tass_spain] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:19,758 WARNING  [task.py:816] [Task: tass_spain] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/1125 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 1125/1125 [00:00<00:00, 70574.21 examples/s]
Generating test split:   0%|          | 0/1704 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1704/1704 [00:00<00:00, 130264.54 examples/s]
2025-02-04:16:47:23,248 WARNING  [task.py:816] [Task: tass_peru] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:23,248 WARNING  [task.py:816] [Task: tass_peru] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/965 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 965/965 [00:00<00:00, 61664.97 examples/s]
Generating test split:   0%|          | 0/1462 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1462/1462 [00:00<00:00, 117324.31 examples/s]
2025-02-04:16:47:26,578 WARNING  [task.py:816] [Task: tass_costa_rica] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:26,578 WARNING  [task.py:816] [Task: tass_costa_rica] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/776 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 776/776 [00:00<00:00, 71612.32 examples/s]
Generating test split:   0%|          | 0/1164 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1164/1164 [00:00<00:00, 82235.71 examples/s]
2025-02-04:16:47:29,802 WARNING  [task.py:816] [Task: tass_mexico] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:29,802 WARNING  [task.py:816] [Task: tass_mexico] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/989 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 989/989 [00:00<00:00, 63400.48 examples/s]
Generating test split:   0%|          | 0/1498 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1498/1498 [00:00<00:00, 114456.10 examples/s]
2025-02-04:16:47:33,143 WARNING  [task.py:816] [Task: tass_all] metric acc is defined, but higher_is_better is not. using default higher_is_better=True
2025-02-04:16:47:33,144 WARNING  [task.py:816] [Task: tass_all] metric f1 is defined, but higher_is_better is not. using default higher_is_better=True
Generating train split:   0%|          | 0/4797 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 4797/4797 [00:00<00:00, 234781.57 examples/s]
Generating test split:   0%|          | 0/7254 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 7254/7254 [00:00<00:00, 335507.32 examples/s]
2025-02-04:16:47:36,700 INFO     [task.py:420] Building contexts for tass_all on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 16%|█▌        | 161/1000 [00:00<00:00, 1605.29it/s] 33%|███▎      | 326/1000 [00:00<00:00, 1627.10it/s] 49%|████▉     | 489/1000 [00:00<00:00, 1183.89it/s] 62%|██████▏   | 619/1000 [00:00<00:00, 1059.13it/s] 77%|███████▋  | 771/1000 [00:00<00:00, 1190.25it/s] 90%|████████▉ | 899/1000 [00:00<00:00, 1202.96it/s]100%|██████████| 1000/1000 [00:00<00:00, 1257.08it/s]
2025-02-04:16:47:37,524 INFO     [task.py:420] Building contexts for tass_mexico on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 12%|█▏        | 115/1000 [00:00<00:00, 1145.36it/s] 23%|██▎       | 230/1000 [00:00<00:00, 935.52it/s]  33%|███▎      | 326/1000 [00:00<00:00, 915.46it/s] 43%|████▎     | 430/1000 [00:00<00:00, 958.17it/s] 54%|█████▍    | 542/1000 [00:00<00:00, 1012.59it/s] 68%|██████▊   | 675/1000 [00:00<00:00, 1115.81it/s] 81%|████████  | 811/1000 [00:00<00:00, 1191.74it/s] 99%|█████████▊| 987/1000 [00:00<00:00, 1368.90it/s]100%|██████████| 1000/1000 [00:00<00:00, 1168.51it/s]
2025-02-04:16:47:38,420 INFO     [task.py:420] Building contexts for tass_costa_rica on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 18%|█▊        | 183/1000 [00:00<00:00, 1829.43it/s] 37%|███▋      | 366/1000 [00:00<00:00, 1823.50it/s] 55%|█████▍    | 549/1000 [00:00<00:00, 1763.97it/s] 73%|███████▎  | 733/1000 [00:00<00:00, 1790.33it/s] 91%|█████████▏| 914/1000 [00:00<00:00, 1795.45it/s]100%|██████████| 1000/1000 [00:00<00:00, 1791.68it/s]
2025-02-04:16:47:39,013 INFO     [task.py:420] Building contexts for tass_peru on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 17%|█▋        | 173/1000 [00:00<00:00, 1729.78it/s] 35%|███▌      | 353/1000 [00:00<00:00, 1766.12it/s] 53%|█████▎    | 531/1000 [00:00<00:00, 1768.46it/s] 71%|███████▏  | 714/1000 [00:00<00:00, 1791.04it/s] 90%|████████▉ | 898/1000 [00:00<00:00, 1808.03it/s]100%|██████████| 1000/1000 [00:00<00:00, 1793.01it/s]
2025-02-04:16:47:39,608 INFO     [task.py:420] Building contexts for tass_spain on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 18%|█▊        | 182/1000 [00:00<00:00, 1818.28it/s] 37%|███▋      | 366/1000 [00:00<00:00, 1826.97it/s] 55%|█████▌    | 551/1000 [00:00<00:00, 1834.42it/s] 74%|███████▎  | 735/1000 [00:00<00:00, 1694.78it/s] 91%|█████████ | 906/1000 [00:00<00:00, 1686.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 1720.09it/s]
2025-02-04:16:47:40,225 INFO     [task.py:420] Building contexts for tass_uruguay on rank 0...
  0%|          | 0/1000 [00:00<?, ?it/s] 15%|█▌        | 152/1000 [00:00<00:00, 1502.62it/s] 30%|███       | 303/1000 [00:00<00:00, 1000.72it/s] 41%|████▏     | 413/1000 [00:00<00:00, 955.16it/s]  52%|█████▏    | 521/1000 [00:00<00:00, 993.34it/s] 65%|██████▍   | 648/1000 [00:00<00:00, 1078.03it/s] 79%|███████▉  | 792/1000 [00:00<00:00, 1189.67it/s] 94%|█████████▎| 937/1000 [00:00<00:00, 1268.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 1177.44it/s]
2025-02-04:16:47:41,113 INFO     [evaluator.py:513] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/18000 [00:00<?, ?it/s]Running loglikelihood requests:   0%|          | 1/18000 [00:03<19:17:11,  3.86s/it]Running loglikelihood requests:   1%|          | 196/18000 [00:04<04:37, 64.21it/s] Running loglikelihood requests:   2%|▏         | 391/18000 [00:04<02:10, 134.51it/s]Running loglikelihood requests:   3%|▎         | 586/18000 [00:04<01:23, 207.51it/s]Running loglikelihood requests:   4%|▍         | 787/18000 [00:06<01:56, 147.31it/s]Running loglikelihood requests:   6%|▌         | 994/18000 [00:07<01:22, 205.99it/s]Running loglikelihood requests:   7%|▋         | 1195/18000 [00:07<01:03, 266.23it/s]Running loglikelihood requests:   8%|▊         | 1387/18000 [00:07<00:51, 323.03it/s]Running loglikelihood requests:   9%|▉         | 1582/18000 [00:08<00:43, 380.71it/s]Running loglikelihood requests:  10%|▉         | 1792/18000 [00:08<00:36, 441.80it/s]Running loglikelihood requests:  11%|█         | 1990/18000 [00:08<00:32, 486.53it/s]Running loglikelihood requests:  12%|█▏        | 2182/18000 [00:09<00:30, 516.50it/s]Running loglikelihood requests:  13%|█▎        | 2380/18000 [00:09<00:28, 547.63it/s]Running loglikelihood requests:  14%|█▍        | 2581/18000 [00:09<00:26, 573.24it/s]Running loglikelihood requests:  15%|█▌        | 2782/18000 [00:09<00:25, 601.43it/s]Running loglikelihood requests:  17%|█▋        | 2989/18000 [00:10<00:24, 624.93it/s]Running loglikelihood requests:  18%|█▊        | 3196/18000 [00:10<00:23, 638.32it/s]Running loglikelihood requests:  19%|█▉        | 3403/18000 [00:10<00:22, 653.15it/s]Running loglikelihood requests:  20%|██        | 3610/18000 [00:11<00:21, 666.67it/s]Running loglikelihood requests:  21%|██▏       | 3832/18000 [00:11<00:20, 687.74it/s]Running loglikelihood requests:  22%|██▏       | 4039/18000 [00:11<00:20, 693.60it/s]Running loglikelihood requests:  24%|██▎       | 4243/18000 [00:12<00:19, 694.96it/s]Running loglikelihood requests:  25%|██▍       | 4453/18000 [00:12<00:19, 700.64it/s]Running loglikelihood requests:  26%|██▌       | 4687/18000 [00:12<00:18, 723.67it/s]Running loglikelihood requests:  27%|██▋       | 4909/18000 [00:12<00:17, 734.25it/s]Running loglikelihood requests:  28%|██▊       | 5125/18000 [00:13<00:17, 738.37it/s]Running loglikelihood requests:  30%|██▉       | 5338/18000 [00:13<00:17, 737.39it/s]Running loglikelihood requests:  31%|███       | 5551/18000 [00:13<00:16, 741.92it/s]Running loglikelihood requests:  32%|███▏      | 5764/18000 [00:14<00:16, 747.57it/s]Running loglikelihood requests:  33%|███▎      | 5992/18000 [00:14<00:15, 767.29it/s]Running loglikelihood requests:  35%|███▍      | 6217/18000 [00:14<00:15, 772.59it/s]Running loglikelihood requests:  36%|███▌      | 6439/18000 [00:14<00:14, 774.73it/s]Running loglikelihood requests:  37%|███▋      | 6655/18000 [00:15<00:14, 773.88it/s]Running loglikelihood requests:  38%|███▊      | 6880/18000 [00:15<00:14, 786.03it/s]Running loglikelihood requests:  39%|███▉      | 7102/18000 [00:15<00:13, 792.36it/s]Running loglikelihood requests:  41%|████      | 7354/18000 [00:16<00:12, 822.24it/s]Running loglikelihood requests:  42%|████▏     | 7591/18000 [00:16<00:12, 831.03it/s]Running loglikelihood requests:  43%|████▎     | 7816/18000 [00:16<00:12, 824.64it/s]Running loglikelihood requests:  45%|████▍     | 8056/18000 [00:16<00:11, 838.53it/s]Running loglikelihood requests:  46%|████▌     | 8293/18000 [00:17<00:11, 843.99it/s]Running loglikelihood requests:  47%|████▋     | 8521/18000 [00:17<00:11, 840.74it/s]Running loglikelihood requests:  49%|████▊     | 8758/18000 [00:17<00:10, 850.76it/s]Running loglikelihood requests:  50%|████▉     | 8995/18000 [00:17<00:10, 856.53it/s]Running loglikelihood requests:  51%|█████▏    | 9238/18000 [00:18<00:10, 867.46it/s]Running loglikelihood requests:  53%|█████▎    | 9481/18000 [00:18<00:09, 880.43it/s]Running loglikelihood requests:  54%|█████▍    | 9706/18000 [00:18<00:09, 876.94it/s]Running loglikelihood requests:  55%|█████▌    | 9940/18000 [00:19<00:09, 883.71it/s]Running loglikelihood requests:  57%|█████▋    | 10174/18000 [00:19<00:08, 887.47it/s]Running loglikelihood requests:  58%|█████▊    | 10405/18000 [00:19<00:08, 895.77it/s]Running loglikelihood requests:  59%|█████▉    | 10636/18000 [00:19<00:08, 897.74it/s]Running loglikelihood requests:  60%|██████    | 10876/18000 [00:20<00:07, 907.39it/s]Running loglikelihood requests:  62%|██████▏   | 11119/18000 [00:20<00:07, 919.54it/s]Running loglikelihood requests:  63%|██████▎   | 11353/18000 [00:20<00:07, 921.87it/s]Running loglikelihood requests:  64%|██████▎   | 11446/18000 [00:20<00:08, 808.90it/s]Running loglikelihood requests:  64%|██████▍   | 11584/18000 [00:21<00:08, 754.41it/s]Running loglikelihood requests:  66%|██████▌   | 11839/18000 [00:21<00:07, 830.99it/s]Running loglikelihood requests:  67%|██████▋   | 12103/18000 [00:21<00:06, 897.98it/s]Running loglikelihood requests:  69%|██████▊   | 12358/18000 [00:21<00:06, 932.96it/s]Running loglikelihood requests:  70%|███████   | 12613/18000 [00:22<00:05, 961.22it/s]Running loglikelihood requests:  72%|███████▏  | 12886/18000 [00:22<00:05, 998.24it/s]Running loglikelihood requests:  73%|███████▎  | 13123/18000 [00:22<00:04, 993.67it/s]Running loglikelihood requests:  74%|███████▍  | 13378/18000 [00:22<00:04, 1011.18it/s]Running loglikelihood requests:  76%|███████▌  | 13633/18000 [00:22<00:04, 1023.27it/s]Running loglikelihood requests:  77%|███████▋  | 13900/18000 [00:23<00:03, 1048.87it/s]Running loglikelihood requests:  79%|███████▊  | 14158/18000 [00:23<00:03, 1060.58it/s]Running loglikelihood requests:  80%|████████  | 14428/18000 [00:23<00:03, 1081.46it/s]Running loglikelihood requests:  82%|████████▏ | 14680/18000 [00:23<00:03, 1079.35it/s]Running loglikelihood requests:  83%|████████▎ | 14929/18000 [00:24<00:02, 1082.65it/s]Running loglikelihood requests:  84%|████████▍ | 15175/18000 [00:24<00:02, 1080.79it/s]Running loglikelihood requests:  86%|████████▌ | 15457/18000 [00:24<00:02, 1118.34it/s]Running loglikelihood requests:  87%|████████▋ | 15688/18000 [00:24<00:02, 1092.87it/s]Running loglikelihood requests:  89%|████████▊ | 15946/18000 [00:25<00:01, 1107.42it/s]Running loglikelihood requests:  90%|█████████ | 16204/18000 [00:25<00:01, 1125.82it/s]Running loglikelihood requests:  91%|█████████▏| 16465/18000 [00:25<00:01, 1141.02it/s]Running loglikelihood requests:  93%|█████████▎| 16726/18000 [00:25<00:01, 1159.34it/s]Running loglikelihood requests:  94%|█████████▍| 16993/18000 [00:25<00:00, 1184.37it/s]Running loglikelihood requests:  96%|█████████▌| 17263/18000 [00:26<00:00, 1198.53it/s]Running loglikelihood requests:  97%|█████████▋| 17506/18000 [00:26<00:00, 1180.71it/s]Running loglikelihood requests:  99%|█████████▊| 17773/18000 [00:26<00:00, 1219.47it/s]Running loglikelihood requests: 100%|█████████▉| 17980/18000 [00:26<00:00, 1258.15it/s]Running loglikelihood requests: 100%|██████████| 18000/18000 [00:26<00:00, 672.77it/s] 
2025-02-04:16:48:25,288 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
Passed argument batch_size = auto:16.0. Detecting largest batch size
Determined largest batch size: 64
Passed argument batch_size = auto:16.0. Detecting largest batch size
Determined largest batch size: 64
hf (pretrained=EleutherAI/pythia-2.8b,trust_remote_code=True,parallelize=True,max_length=2048,trust_remote_code=True), gen_kwargs: (None), limit: 1000.0, num_fewshot: None, batch_size: auto:16 (64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64)
|     Tasks     |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------|------:|------|-----:|------|---|-----:|---|------|
|tass_all       |      1|none  |     0|acc   |↑  |0.5120|±  |0.0158|
|               |       |none  |     0|f1    |↑  |0.4101|±  |   N/A|
|tass_costa_rica|      1|none  |     0|acc   |↑  |0.5120|±  |0.0158|
|               |       |none  |     0|f1    |↑  |0.4101|±  |   N/A|
|tass_mexico    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0153|
|               |       |none  |     0|f1    |↑  |0.4537|±  |   N/A|
|tass_peru      |      1|none  |     0|acc   |↑  |0.4820|±  |0.0158|
|               |       |none  |     0|f1    |↑  |0.3971|±  |   N/A|
|tass_spain     |      1|none  |     0|acc   |↑  |0.5160|±  |0.0158|
|               |       |none  |     0|f1    |↑  |0.3969|±  |   N/A|
|tass_uruguay   |      1|none  |     0|acc   |↑  |0.5330|±  |0.0158|
|               |       |none  |     0|f1    |↑  |0.4129|±  |   N/A|

